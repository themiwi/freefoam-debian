#!@PYTHON_EXECUTABLE@

import sys
import os
import os.path
sys.path.insert(0, '@FOAM_PYTHON_DIR@')
from FreeFOAM.compat import *
import FreeFOAM.tutorial
import FreeFOAM.util

class compressibleInterDepthCharge2DRunner(FreeFOAM.tutorial.CaseRunner):
   def __init__(self):
      FreeFOAM.tutorial.CaseRunner.__init__(self,
            'compressibleInter_les_depthCharge2D')
      self.add_app_step('blockMesh')
      self.add_step('prepare', self._prepare)
      self.add_app_step('setFields')
      self.add_app_step('compressibleInter')

   def clean(self):
      FreeFOAM.tutorial.CaseRunner.clean(self)
      FreeFOAM.util.rmtree(os.path.join(self.case_dir, '0', 'alpha1.gz'))
      FreeFOAM.util.rmtree(os.path.join(self.case_dir, '0', 'p_rgh.gz'))

   def _prepare(self, case_dir, stamp_file, test_mode):
      try:
         stamp_file.write('Copying 0/alpha1.org to 0/alpha1\n')
         alpha1 = os.path.join(case_dir, '0', 'alpha1')
         FreeFOAM.util.copytree(alpha1+'.org', alpha1)

         stamp_file.write('Copying 0/p_rgh.org to 0/p_rgh\n')
         p = os.path.join(case_dir, '0', 'p_rgh')
         FreeFOAM.util.copytree(p+'.org', p)
         stamp_file.write('REPORT: SUCCESS\n')
         return True
      except Exception:
         e = sys.exc_info()[1]
         stamp_file.write('*** Error *** '+str(e)+'\nREPORT: FAILURE\n')
         return False

if __name__ == '__main__':
   os.chdir(os.path.abspath(os.path.dirname(sys.argv[0])))
   runner = FreeFOAM.tutorial.TutorialRunner()
   runner.add_case(compressibleInterDepthCharge2DRunner())
   sys.exit(runner.main())

# ------------------- vim: set sw=3 sts=3 ft=python et: ------------ end-of-file
